# Currently the builds use @mgedmin's Appveyor account.  The PyPI token belongs
# to zope.wheelbuilder, which is managed by @mgedmin and @dataflake.

environment:
  global:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD:
      secure: aoZC/+rvJKg8B5GMGIxd1YDPcIbo2kSsckCbQ6o8fhIRqSyuhX1iLm21hgDEkq2ePuyQ7+cWnNvXGactxjzA4iUS5GCOuF/E6YTvS3nGcuoQuH607wn2hngzz1p4Z+5ClFPx27vZiRAFgBoTbIo8XODHC9qFYluZ68eiwxFOiCuXK9ONEjMn8LjoaNSPJYyJO3Wr8W5oLeYG+wGcNGuYVXEk5/LSDg5n17ujpL7qsVTdVNjTwgmtnv191n2ip1Sgh1O5Xm9eG7VDZSxr/xNMpw==

  matrix:
    - python: 27
    - python: 27-x64
    - python: 35
    - python: 35-x64
    - python: 36
    - python: 36-x64
    - python: 37
    - python: 37-x64
    - python: 38
    - python: 38-x64
    - { python: 27, PURE_PYTHON: 1 }
    - { python: 37, PURE_PYTHON: 1 }

install:
  - "SET PATH=C:\\Python%PYTHON%;c:\\Python%PYTHON%\\scripts;%PATH%"
  - ps: |
      $env:PYTHON = "C:\\Python${env:PYTHON}"
      if (-not (Test-Path $env:PYTHON)) {
        curl -o install_python.ps1 https://raw.githubusercontent.com/matthew-brett/multibuild/11a389d78892cf90addac8f69433d5e22bfa422a/install_python.ps1
        .\install_python.ps1
      }
  - ps: if (-not (Test-Path $env:PYTHON)) { throw "No $env:PYTHON" }
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64\vcvars64.bat"
# We need to install the C extensions that BTrees setup-requires
# separately because we've seen problems with the BTrees build cleanup step trying
# to delete a .pyd that was still open.
  - python -m pip install -U pip
  - pip install -U setuptools
  - pip install -U persistent
  - pip install -U BTrees
  - pip install -U zope.testrunner
  - pip install -U .[test]

build_script:
  - pip install wheel
  - python -W ignore setup.py -q bdist_wheel

test_script:
  - python -m zope.testrunner --test-path=src

on_success:
  - echo Build succesful!

artifacts:
  - path: 'dist\*.whl'
    name: wheel

deploy_script:
  - ps: if ($env:APPVEYOR_REPO_TAG -eq $TRUE -and $env:PURE_PYTHON -ne 1) { pip install twine; twine upload --skip-existing dist/* }

deploy: on
